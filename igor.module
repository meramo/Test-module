<?php

// Implements hook_form_BASE_FORM_ID_alter
function igor_form_node_form_alter(&$form, &$form_state, $form_id) {
  if (!empty($form['#node_edit_form'])) {
    // Add a textfield to all node form.
    $form['sample_textfield'] = array(
      '#type' => 'textfield',
      '#title' => t("Sample textfield"),
      '#required' => FALSE,
      '#weight' => -3,
      '#size' => '32',
      '#maxlength' => '64',
    );
  }

//  krumo($form);
}

/**
 * Implements hook_node_insert().
 */
function igor_node_insert($node) {
  if (isset($node->sample_textfield)) {
    db_insert('igor_textfield')
      ->fields(array(
        'nid' => $node->nid,
        'textfield' => $node->sample_textfield
        )
      )
      ->execute();
  }

  // Set a message so we know the update ran.
  drupal_set_message(t('Value added successfully'));
}

/**
 * Implements hook_node_update().
 *
 */
function igor_node_update($node) {

  // If there is already a record, update it.
  if (db_query('SELECT nid FROM {igor_textfield} WHERE nid = :nid', array(':nid' => $node->nid))->fetchField()) {
    $num_updated = db_update('igor_textfield')
      ->fields(array(
        'nid' => $node->nid,
        'textfield' => $node->sample_textfield,
      ))
      ->condition('nid', $node->nid)
      ->execute();

    // Set a message so we know the update ran.
    drupal_set_message(t('Node updated successfully'));
  }

  // Otherwise, insert a new one.
  else {
    igor_node_insert($node);
  }
}

/**
 * Implements hook_node_delete().
 */
function igor_node_delete($node) {
  db_delete('igor_textfield')->condition('nid', $node->nid)->execute();
}



